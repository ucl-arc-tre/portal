openapi: "3.0.0"
info:
  version: 0.0.0
  title: portal
  description: UCL ARC portal web API
servers:
  - url: /web/api/v0

paths:
  /auth:
    get:
      description: Authentication and authorization status of the user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auth"
        "401":
          description: Unauthenticated
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /profile:
    get:
      description: Users profile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        default:
          description: Unexpected error
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileUpdate"
      responses:
        "200":
          description: "Successfully updated profile"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /profile/agreements:
    get:
      description: Get all the agreements a user has agreed to
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAgreements"
        "500":
          description: Internal server error
        default:
          description: Unexpected error
    post:
      description: Update the agreements for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementConfirmation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAgreements"
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /profile/training:
    get:
      description: Get the training record status for a user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileTraining"
        "500":
          description: Internal server error
        default:
          description: Unexpected error
    post:
      description: Update the training record for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileTrainingUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileTrainingResponse"
          description: Accepted
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /agreements/{agreementType}:
    get:
      description: Get the latest approved researcher agreement
      parameters:
        - in: path
          name: agreementType
          required: true
          description: Type of agreement to get
          schema:
            $ref: "#/components/schemas/AgreementType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
        "406":
          description: Not acceptable
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /users:
    get:
      description: Get all the users a user has access to view
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserData"
        "403":
          description: Forbidden
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /users/{userId}/training:
    post:
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user to be updated
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserTrainingUpdate"
      responses:
        "200":
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingRecord"
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /users/approved-researchers/import/csv:
    post:
      description: |
        Upload a CSV file with fields
        <username: string, e.g. "bob@example.com">,
        <agreed to agreement: bool, e.g. true>,
        <NHSD training completed at date: string, e.g. 2021-03-11>
      requestBody:
        required: true
        content:
          text/csv:
            schema:
              type: string
              format: binary
      responses:
        "204":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /users/invite:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  description: Email address of the person to be invited
      responses:
        "200":
          description: Successfully sent invite

  # Study Management
  /studies:
    get:
      description: Get all studies accessible to the current user
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Study"
        "403":
          description: Forbidden
        "500":
          description: Internal server error
        default:
          description: Unexpected error
    post:
      description: Create a new study
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudyCreateRequest"
      responses:
        "201":
          description: Study created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Study"
        "406":
          description: Invalid request
        "403":
          description: Forbidden
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  # Study Asset Management
  /studies/{studyId}/assets:
    get:
      description: Get all assets for a specific study
      parameters:
        - in: path
          name: studyId
          required: true
          description: ID of the study
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Asset"
        "403":
          description: Forbidden
        "404":
          description: Study not found
        "500":
          description: Internal server error
        default:
          description: Unexpected error
    post:
      description: Create a new asset for a specific study
      parameters:
        - in: path
          name: studyId
          required: true
          description: ID of the study
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Asset"
      responses:
        "201":
          description: Asset created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asset"
        "400":
          description: Invalid request
        "403":
          description: Forbidden
        "404":
          description: Study not found
        "500":
          description: Internal server error
        default:
          description: Unexpected error

components:
  schemas:
    Auth:
      type: object
      required:
        - username
        - roles
      properties:
        username:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - admin
              - base
              - approved-researcher

    Profile:
      type: object
      required:
        - username
        - chosen_name
      properties:
        username:
          type: string
        chosen_name:
          type: string

    ProfileUpdate:
      type: object
      required:
        - chosen_name
      properties:
        chosen_name:
          type: string

    Agreement:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
          description: UUID of the agreement
        text:
          type: string

    AgreementConfirmation:
      type: object
      required:
        - agreement_id
      properties:
        agreement_id:
          type: string
          description: UUID of the agreement that has been agreed to

    ConfirmedAgreement:
      type: object
      required:
        - confirmed_at
        - agreement_type
      properties:
        confirmed_at:
          type: string
          description: Time in RFC3339 format at which the agreement was confirmed
        agreement_type:
          $ref: "#/components/schemas/AgreementType"
          description: Type of agreement that was confirmed

    AgreementType:
      type: string
      enum:
        - approved-researcher
        - study-owner

    UserAgreements:
      type: object
      required:
        - confirmed_agreements
      properties:
        confirmed_agreements:
          type: array
          items:
            $ref: "#/components/schemas/ConfirmedAgreement"

    TrainingKind:
      type: string
      enum:
        - training_kind_nhsd

    ProfileTrainingUpdate:
      type: object
      required:
        - kind
      properties:
        kind:
          $ref: "#/components/schemas/TrainingKind"
        certificate_content_pdf_base64:
          type: string
          description: Base64 encoded PDF file data of the certificate

    ProfileTrainingResponse:
      type: object
      properties:
        certificate_is_valid:
          type: boolean
          description: Is the certificate valid
        certificate_message:
          type: string
          description: Reason why the training certificate is valid/invalid
        certificate_issued_at:
          type: string
          description: Time in RFC3339 format at which the the certificate was issued

    TrainingRecord:
      type: object
      required:
        - kind
        - is_valid
      properties:
        kind:
          $ref: "#/components/schemas/TrainingKind"
          description: The type of training
        is_valid:
          type: boolean
          description: Whether this training certification is currently valid
        completed_at:
          type: string
          description: Time in RFC3339 format when the training was completed

    ProfileTraining:
      type: object
      required:
        - training_records
      properties:
        training_records:
          type: array
          items:
            $ref: "#/components/schemas/TrainingRecord"
          description: List of all training records for the user

    User:
      type: object
      required:
        - username
        - id
      properties:
        username:
          type: string
        id:
          type: string

    UserData:
      type: object
      required:
        - user
        - roles
        - agreements
        - training_record
      properties:
        user:
          $ref: "#/components/schemas/User"
        roles:
          type: array
          items:
            type: string
        agreements:
          $ref: "#/components/schemas/UserAgreements"
        training_record:
          $ref: "#/components/schemas/ProfileTraining"

    UserTrainingUpdate:
      type: object
      required:
        - training_kind
        - training_date
      properties:
        training_kind:
          $ref: "#/components/schemas/TrainingKind"
        training_date:
          type: string
          description: Time in RFC3339 format at which the the certificate was issued

    Asset:
      type: object
      description: A data asset representing a set of related data entities
      required:
        - id
        - title
        - description
        - classification_impact
        - locations
        - protection
        - legal_basis
        - format
        - expiry
        - has_dspt
        - stored_outside_uk_eea
        - accessed_by_third_parties
        - third_party_agreement
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique identifier for the asset
        title:
          type: string
          description: Title of the asset
        description:
          type: string
          description: Description of the asset
        classification_impact:
          type: string
          enum:
            - Public
            - Confidential
            - Highly confidential
          description: Classification level of the asset
        locations:
          type: array
          items:
            type: string
          description: Storage locations and touchpoints for the asset
        protection:
          type: string
          enum:
            - anonymisation
            - identifiable_low_confidence_pseudonymisation
          description: Type of protection applied to the asset
        legal_basis:
          type: string
          description: Legal basis for holding the asset
        format:
          type: string
          description: Format of the asset
        expiry:
          type: string
          description: Retention expiry date of the asset
        has_dspt:
          type: boolean
          description: Whether there is an up to date Data Security & Protection Toolkit in place
        stored_outside_uk_eea:
          type: boolean
          description: Whether the asset is stored or processed outside UK and EEA
        accessed_by_third_parties:
          type: boolean
          description: Whether the asset is accessed by or governed by third parties
        third_party_agreement:
          type: string
          description: Third party agreement identifier if asset is governed by third parties
        status:
          type: string
          enum:
            - Active
            - Awaiting
            - Destroyed
          description: Status of the asset
        created_at:
          type: string
          description: Time in RFC3339 format when the asset was created
        updated_at:
          type: string
          description: Time in RFC3339 format when the asset was last updated

    StudyBase:
      type: object
      description: Base study properties
      required:
        - title
        - data_controller_organisation
        - additional_study_admin_usernames
      properties:
        title:
          type: string
          description: Title of the study
        description:
          type: string
          description: Description of the study
        additional_study_admin_usernames:
          type: array
          items:
            type: string
          description: List of additional study administrator usernames (empty array if none)
        data_controller_organisation:
          type: string
          description: The organisation acting as data controller for the study (e.g., "UCL" or custom organization name)
        involves_ucl_sponsorship:
          type: boolean
          description: Whether UCL sponsorship is involved (seeking/have sought)
        involves_cag:
          type: boolean
          description: Whether Confidentiality Advisory Group approval is involved (seeking/have sought)
        cag_reference:
          type: string
          description: CAG reference number
        involves_ethics_approval:
          type: boolean
          description: Whether Research Ethics Committee approval is involved (seeking/have sought)
        involves_hra_approval:
          type: boolean
          description: Whether Health Research Authority approval is involved (seeking/have sought)
        iras_id:
          type: string
          description: IRAS ID if applicable
        is_nhs_associated:
          type: boolean
          description: Whether the research is associated with NHS
        involves_nhs_england:
          type: boolean
          description: Whether NHS England is involved in the research
        nhs_england_reference:
          type: string
          description: NHS England DARS NIC number
        involves_mnca:
          type: boolean
          description: Whether the HRA Model Non-Commercial Agreement is involved
        requires_dspt:
          type: boolean
          description: Whether NHS Data Security & Protection Toolkit is required
        requires_dbs:
          type: boolean
          description: Whether a DBS check is required for staff
        is_data_protection_office_registered:
          type: boolean
          description: Whether the study is registered with the UCL Data Protection Office
        data_protection_number:
          type: string
          description: Full data protection registration number
        involves_third_party:
          type: boolean
          description: Whether third party organizations are involved
        involves_external_users:
          type: boolean
          description: Whether external users will have access to the study
        involves_participant_consent:
          type: boolean
          description: Whether participant consent is involved (seeking/have sought)
        involves_indirect_data_collection:
          type: boolean
          description: Whether data is collected indirectly for the study (e.g. via a third party)
        involves_data_processing_outside_eea:
          type: boolean
          description: Whether data is processed outside UK/EEA
        owner_user_id:
          type: string
          description: ID of the user who owns the study

    StudyCreateRequest:
      allOf:
        - $ref: "#/components/schemas/StudyBase"
      description: Request payload for creating a new study

    Study:
      allOf:
        - $ref: "#/components/schemas/StudyBase"
        - type: object
          required:
            - id
            - created_at
            - updated_at
          properties:
            id:
              type: string
              description: Unique identifier for the study
            created_at:
              type: string
              description: Time in RFC3339 format when the study was created
            updated_at:
              type: string
              description: Time in RFC3339 format when the study was last updated
      description: A research study
