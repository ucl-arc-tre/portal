openapi: "3.0.0"
info:
  version: 0.0.0
  title: portal
  description: UCL ARC portal web API
servers:
  - url: /api/v0

paths:
  # Authentication
  /auth:
    get:
      description: Authentication and authorization status of the user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auth"
        "401":
          description: Unauthenticated
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  # User Management (Admin)
  /users:
    get:
      operationId: getAllUsers
      description: Get all the users that an admin has access to
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/People"
        "403":
          description: Forbidden
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  # User Identity Management
  /user/identity:
    get:
      description: User identity information (chosen name)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserIdentityResponse"
        default:
          description: Unexpected error
    post:
      operationId: updateChosenName
      description: Update user identity information (chosen name)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdentity"
      responses:
        "200":
          description: Successfully updated user identity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserIdentityResponse"
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  # Training Management
  /training/{userId}:
    get:
      operationId: getTrainingRecord
      description: Get the training record status for a user
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user whose training records to retrieve
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTrainingStatus"
        "500":
          description: Internal server error
        default:
          description: Unexpected error
    post:
      operationId: updateTrainingRecord
      description: Update the training record for a user
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user whose training record to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserTrainingUpdateBody"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTrainingResponse"
          description: Accepted
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /training/{userId}/{trainingKind}:
    put:
      operationId: updateTrainingValidityDate
      description: Update a user's training record for a specific training kind
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user whose training record should be updated
          schema:
            type: string
        - in: path
          name: trainingKind
          required: true
          description: The kind of training to update
          schema:
            $ref: "#/components/schemas/TrainingKind"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrainingValidFromDate"
      responses:
        "200":
          description: Successfully updated training record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingRecord"
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  # Agreement Management
  /agreements:
    get:
      operationId: getAllConfirmedAgreements
      description: Get all the agreements a user has agreed to
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementsList"
        "500":
          description: Internal server error
        default:
          description: Unexpected error
    post:
      operationId: confirmAgreement
      description: Confirm an agreement for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgreementConfirmation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgreementsList"
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  /agreements/approved-researcher:
    get:
      operationId: getAgreementsTextApprovedResearcher
      description: Get the latest approved researcher agreement text
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
        "406":
          description: Not acceptable
        "500":
          description: Internal server error
        default:
          description: Unexpected error

  # Data Import (Admin)
  /admin/approved-researchers/import/csv:
    post:
      operationId: importApprovedResearchersCsv
      description: |
        Upload a CSV file with fields
        <username: string, e.g. "bob@example.com">,
        <agreed to agreement: bool, e.g. true>,
        <NHSD training completed at date: string, e.g. 2021-03-11>
      requestBody:
        required: true
        content:
          text/csv:
            schema:
              type: string
              format: binary
      responses:
        "204":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Internal server error
        default:
          description: Unexpected error

components:
  schemas:
    Auth:
      type: object
      required:
        - id
        - username
        - roles
      properties:
        id:
          type: string
        username:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - admin
              - base
              - approved-researcher

    User:
      type: object
      required:
        - username
        - id
      properties:
        username:
          type: string
        id:
          type: string

    Person:
      type: object
      required:
        - user
        - roles
        - agreements
        - training_record
      properties:
        user:
          $ref: "#/components/schemas/User"
        roles:
          type: array
          items:
            type: string
        agreements:
          $ref: "#/components/schemas/AgreementsList"
        training_record:
          $ref: "#/components/schemas/UserTrainingStatus"

    People:
      type: array
      items:
        $ref: "#/components/schemas/Person"

    TrainingValidFromDate:
      type: object
      required:
        - training_valid_from_date
      properties:
        training_valid_from_date:
          type: string
          description: Time in RFC3339 format representing the date from which the training is valid

    UserIdentityResponse:
      type: object
      required:
        - username
        - chosen_name
      properties:
        username:
          type: string
        chosen_name:
          type: string

    UserIdentity:
      type: object
      required:
        - chosen_name
      properties:
        chosen_name:
          type: string

    Agreement:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
          description: UUID of the agreement
        text:
          type: string

    AgreementConfirmation:
      type: object
      required:
        - agreement_id
      properties:
        agreement_id:
          type: string
          description: UUID of the agreement that has been agreed to

    ConfirmedAgreement:
      type: object
      required:
        - confirmed_at
        - agreement_type
      properties:
        confirmed_at:
          type: string
          description: Time in RFC3339 format at which the agreement was confirmed
        agreement_type:
          $ref: "#/components/schemas/AgreementType"
          description: Type of agreement that was confirmed

    AgreementType:
      type: string
      enum:
        - approved-researcher
        - study-owner

    AgreementsList:
      type: object
      required:
        - confirmed_agreements
      properties:
        confirmed_agreements:
          type: array
          items:
            $ref: "#/components/schemas/ConfirmedAgreement"

    TrainingKind:
      type: string
      enum:
        - training_kind_nhsd

    UserTrainingUpdateBody:
      type: object
      required:
        - kind
      properties:
        kind:
          $ref: "#/components/schemas/TrainingKind"
        certificate_content_pdf_base64:
          type: string
          description: Base64 encoded PDF file data of the certificate

    UserTrainingResponse:
      type: object
      properties:
        certificate_is_valid:
          type: boolean
          description: Is the certificate valid
        certificate_message:
          type: string
          description: Reason why the training certificate is valid/invalid
        certificate_issued_at:
          type: string
          description: Time in RFC3339 format at which the certificate was issued

    UserTrainingStatus:
      type: object
      required:
        - training_records
      properties:
        training_records:
          type: array
          items:
            $ref: "#/components/schemas/TrainingRecord"
          description: List of all training records for the user

    TrainingRecord:
      type: object
      required:
        - kind
        - is_valid
      properties:
        kind:
          $ref: "#/components/schemas/TrainingKind"
          description: The type of training
        is_valid:
          type: boolean
          description: Whether this training certification is currently valid
        completed_at:
          type: string
          description: Time in RFC3339 format when the training was completed
