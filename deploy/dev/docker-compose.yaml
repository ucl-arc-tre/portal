services:
  api:
    build:
      context: ../..
      target: api-dev
    restart: always
    environment:
      PORT: "8080"
      IS_DEV_DEPLOY: true
    volumes:
      - ./config.yaml:/etc/portal/config.yaml:ro
      - type: bind
        source: ../..
        target: /repo

  s3:
    # https://github.com/seaweedfs/seaweedfs
    image: chrislusf/seaweedfs
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    ports:
      - 23646:23646 # Admin UI
    environment:
      AWS_ACCESS_KEY_ID: s3
      AWS_SECRET_ACCESS_KEY: s3 # pragma: allowlist secret
    volumes:
      - ./s3/entrypoint.sh:/entrypoint.sh:ro

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.8.2
    command: --config /oauth2-proxy.cfg
    hostname: oauth2-proxy
    volumes:
      - "./oauth2-proxy.cfg:/oauth2-proxy.cfg:ro"
    restart: unless-stopped
    depends_on:
      - api

  web-frontend:
    build:
      context: ../..
      target: web-frontend-dev
    restart: on-failure
    volumes:
      - type: bind
        source: ../..
        target: /repo
      - type: volume
        target: /repo/web/node_modules

  nginx:
    image: nginx:latest
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - web-frontend

  postgres:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: postgres # pragma: allowlist secret
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
