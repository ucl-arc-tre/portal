// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetAuthData, GetAuthResponses, GetAuthErrors, GetProfileData, GetProfileResponses, GetProfileErrors, PostProfileData, PostProfileResponses, PostProfileErrors, GetProfileAgreementsData, GetProfileAgreementsResponses, GetProfileAgreementsErrors, PostProfileAgreementsData, PostProfileAgreementsResponses, PostProfileAgreementsErrors, GetProfileTrainingData, GetProfileTrainingResponses, GetProfileTrainingErrors, PostProfileTrainingData, PostProfileTrainingResponses, PostProfileTrainingErrors, GetAgreementsByAgreementTypeData, GetAgreementsByAgreementTypeResponses, GetAgreementsByAgreementTypeErrors, GetUsersData, GetUsersResponses, GetUsersErrors, PostUsersByUserIdTrainingData, PostUsersByUserIdTrainingResponses, PostUsersByUserIdTrainingErrors, PostUsersApprovedResearchersImportCsvData, PostUsersApprovedResearchersImportCsvResponses, PostUsersApprovedResearchersImportCsvErrors, PostUsersInviteData, PostUsersInviteResponses, PostUsersInviteErrors, GetStudiesData, GetStudiesResponses, GetStudiesErrors, PostStudiesData, PostStudiesResponses, PostStudiesErrors, GetStudiesByStudyIdData, GetStudiesByStudyIdResponses, GetStudiesByStudyIdErrors, PostStudiesAdminByStudyIdReviewData, PostStudiesAdminByStudyIdReviewResponses, PostStudiesAdminByStudyIdReviewErrors, GetStudiesByStudyIdAssetsData, GetStudiesByStudyIdAssetsResponses, GetStudiesByStudyIdAssetsErrors, PostStudiesByStudyIdAssetsData, PostStudiesByStudyIdAssetsResponses, PostStudiesByStudyIdAssetsErrors, GetStudiesByStudyIdAssetsByAssetIdData, GetStudiesByStudyIdAssetsByAssetIdResponses, GetStudiesByStudyIdAssetsByAssetIdErrors, GetLogoutData, GetLogoutResponses, GetLogoutErrors, GetStudiesByStudyIdAgreementsData, GetStudiesByStudyIdAgreementsResponses, GetStudiesByStudyIdAgreementsErrors, PostStudiesByStudyIdAgreementsData, PostStudiesByStudyIdAgreementsResponses, PostStudiesByStudyIdAgreementsErrors, PostStudiesByStudyIdAssetsByAssetIdContractsByContractIdUploadData, PostStudiesByStudyIdAssetsByAssetIdContractsByContractIdUploadResponses, PostStudiesByStudyIdAssetsByAssetIdContractsByContractIdUploadErrors, GetStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownloadData, GetStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownloadResponses, GetStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownloadErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Authentication and authorization status of the user
 */
export const getAuth = <ThrowOnError extends boolean = false>(options?: Options<GetAuthData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAuthResponses, GetAuthErrors, ThrowOnError>({
        url: '/auth',
        ...options
    });
};

/**
 * Users profile
 */
export const getProfile = <ThrowOnError extends boolean = false>(options?: Options<GetProfileData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetProfileResponses, GetProfileErrors, ThrowOnError>({
        url: '/profile',
        ...options
    });
};

export const postProfile = <ThrowOnError extends boolean = false>(options: Options<PostProfileData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostProfileResponses, PostProfileErrors, ThrowOnError>({
        url: '/profile',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get all the agreements a user has agreed to
 */
export const getProfileAgreements = <ThrowOnError extends boolean = false>(options?: Options<GetProfileAgreementsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetProfileAgreementsResponses, GetProfileAgreementsErrors, ThrowOnError>({
        url: '/profile/agreements',
        ...options
    });
};

/**
 * Update the agreements for a user
 */
export const postProfileAgreements = <ThrowOnError extends boolean = false>(options: Options<PostProfileAgreementsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostProfileAgreementsResponses, PostProfileAgreementsErrors, ThrowOnError>({
        url: '/profile/agreements',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get the training record status for a user
 */
export const getProfileTraining = <ThrowOnError extends boolean = false>(options?: Options<GetProfileTrainingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetProfileTrainingResponses, GetProfileTrainingErrors, ThrowOnError>({
        url: '/profile/training',
        ...options
    });
};

/**
 * Update the training record for a user
 */
export const postProfileTraining = <ThrowOnError extends boolean = false>(options: Options<PostProfileTrainingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostProfileTrainingResponses, PostProfileTrainingErrors, ThrowOnError>({
        url: '/profile/training',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get the latest approved researcher agreement
 */
export const getAgreementsByAgreementType = <ThrowOnError extends boolean = false>(options: Options<GetAgreementsByAgreementTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAgreementsByAgreementTypeResponses, GetAgreementsByAgreementTypeErrors, ThrowOnError>({
        url: '/agreements/{agreementType}',
        ...options
    });
};

/**
 * Get all the users a user has access to view
 */
export const getUsers = <ThrowOnError extends boolean = false>(options: Options<GetUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUsersResponses, GetUsersErrors, ThrowOnError>({
        url: '/users',
        ...options
    });
};

export const postUsersByUserIdTraining = <ThrowOnError extends boolean = false>(options: Options<PostUsersByUserIdTrainingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUsersByUserIdTrainingResponses, PostUsersByUserIdTrainingErrors, ThrowOnError>({
        url: '/users/{userId}/training',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Upload a CSV file with fields
 * <username: string, e.g. "bob@example.com">,
 * <agreed to agreement: bool, e.g. true>,
 * <NHSD training completed at date: string, e.g. 2021-03-11>
 *
 */
export const postUsersApprovedResearchersImportCsv = <ThrowOnError extends boolean = false>(options: Options<PostUsersApprovedResearchersImportCsvData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUsersApprovedResearchersImportCsvResponses, PostUsersApprovedResearchersImportCsvErrors, ThrowOnError>({
        bodySerializer: null,
        url: '/users/approved-researchers/import/csv',
        ...options,
        headers: {
            'Content-Type': 'text/csv',
            ...options.headers
        }
    });
};

export const postUsersInvite = <ThrowOnError extends boolean = false>(options: Options<PostUsersInviteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUsersInviteResponses, PostUsersInviteErrors, ThrowOnError>({
        url: '/users/invite',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get all studies accessible to the current user
 */
export const getStudies = <ThrowOnError extends boolean = false>(options?: Options<GetStudiesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetStudiesResponses, GetStudiesErrors, ThrowOnError>({
        url: '/studies',
        ...options
    });
};

/**
 * Create a new study
 */
export const postStudies = <ThrowOnError extends boolean = false>(options: Options<PostStudiesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStudiesResponses, PostStudiesErrors, ThrowOnError>({
        url: '/studies',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get details of a specific study
 */
export const getStudiesByStudyId = <ThrowOnError extends boolean = false>(options: Options<GetStudiesByStudyIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStudiesByStudyIdResponses, GetStudiesByStudyIdErrors, ThrowOnError>({
        url: '/studies/{studyId}',
        ...options
    });
};

/**
 * Update study status + opportunity to update feedback
 */
export const postStudiesAdminByStudyIdReview = <ThrowOnError extends boolean = false>(options: Options<PostStudiesAdminByStudyIdReviewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStudiesAdminByStudyIdReviewResponses, PostStudiesAdminByStudyIdReviewErrors, ThrowOnError>({
        url: '/studies/admin/{studyId}/review',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get all assets for a specific study
 */
export const getStudiesByStudyIdAssets = <ThrowOnError extends boolean = false>(options: Options<GetStudiesByStudyIdAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStudiesByStudyIdAssetsResponses, GetStudiesByStudyIdAssetsErrors, ThrowOnError>({
        url: '/studies/{studyId}/assets',
        ...options
    });
};

/**
 * Create a new asset for a specific study
 */
export const postStudiesByStudyIdAssets = <ThrowOnError extends boolean = false>(options: Options<PostStudiesByStudyIdAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStudiesByStudyIdAssetsResponses, PostStudiesByStudyIdAssetsErrors, ThrowOnError>({
        url: '/studies/{studyId}/assets',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get details of a specific asset within a study
 */
export const getStudiesByStudyIdAssetsByAssetId = <ThrowOnError extends boolean = false>(options: Options<GetStudiesByStudyIdAssetsByAssetIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStudiesByStudyIdAssetsByAssetIdResponses, GetStudiesByStudyIdAssetsByAssetIdErrors, ThrowOnError>({
        url: '/studies/{studyId}/assets/{assetId}',
        ...options
    });
};

/**
 * Log the user out
 */
export const getLogout = <ThrowOnError extends boolean = false>(options?: Options<GetLogoutData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetLogoutResponses, GetLogoutErrors, ThrowOnError>({
        url: '/logout',
        ...options
    });
};

/**
 * Get all agreements signed for a specific study
 */
export const getStudiesByStudyIdAgreements = <ThrowOnError extends boolean = false>(options: Options<GetStudiesByStudyIdAgreementsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStudiesByStudyIdAgreementsResponses, GetStudiesByStudyIdAgreementsErrors, ThrowOnError>({
        url: '/studies/{studyId}/agreements',
        ...options
    });
};

/**
 * Sign an agreement for a specific study
 */
export const postStudiesByStudyIdAgreements = <ThrowOnError extends boolean = false>(options: Options<PostStudiesByStudyIdAgreementsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStudiesByStudyIdAgreementsResponses, PostStudiesByStudyIdAgreementsErrors, ThrowOnError>({
        url: '/studies/{studyId}/agreements',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Upload a contract object e.g. PDF
 */
export const postStudiesByStudyIdAssetsByAssetIdContractsByContractIdUpload = <ThrowOnError extends boolean = false>(options: Options<PostStudiesByStudyIdAssetsByAssetIdContractsByContractIdUploadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStudiesByStudyIdAssetsByAssetIdContractsByContractIdUploadResponses, PostStudiesByStudyIdAssetsByAssetIdContractsByContractIdUploadErrors, ThrowOnError>({
        bodySerializer: null,
        url: '/studies/{studyId}/assets/{assetId}/contracts/{contractId}/upload',
        ...options,
        headers: {
            'Content-Type': 'application/octet-stream',
            ...options.headers
        }
    });
};

/**
 * Get a contract object e.g. PDF
 */
export const getStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownload = <ThrowOnError extends boolean = false>(options: Options<GetStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownloadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownloadResponses, GetStudiesByStudyIdAssetsByAssetIdContractsByContractIdDownloadErrors, ThrowOnError>({
        url: '/studies/{studyId}/assets/{assetId}/contracts/{contractId}/download',
        ...options
    });
};