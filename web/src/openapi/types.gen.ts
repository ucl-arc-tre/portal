// This file is auto-generated by @hey-api/openapi-ts

export type Auth = {
    username: string;
    roles: Array<'admin' | 'base' | 'approved-researcher'>;
};

export type ProfileResponse = {
    username: string;
    chosen_name: string;
};

export type ProfileUpdate = {
    chosen_name: string;
};

export type Agreement = {
    /**
     * UUID of the agreement
     */
    id: string;
    text: string;
};

export type AgreementConfirmation = {
    /**
     * UUID of the agreement that has been agreed to
     */
    agreement_id: string;
};

export type ConfirmedAgreement = {
    /**
     * Time in RFC3339 format at which the agreement was confirmed
     */
    confirmed_at: string;
    agreement_type: AgreementType;
};

export type AgreementType = 'approved-researcher' | 'study-owner';

export type ProfileAgreements = {
    confirmed_agreements: Array<ConfirmedAgreement>;
};

export type TrainingKind = 'training_kind_nhsd';

export type ProfileTrainingUpdate = {
    kind: TrainingKind;
    /**
     * Base64 encoded PDF file data of the certificate
     */
    certificate_content_pdf_base64?: string;
};

export type ProfileTrainingResponse = {
    /**
     * Is the certificate valid
     */
    certificate_is_valid?: boolean;
    /**
     * Reason why the training certificate is valid/invalid
     */
    certificate_message?: string;
    /**
     * Time in RFC3339 format at which the the certificate was issued
     */
    certificate_issued_at?: string;
};

export type User = {
    username: string;
    id: string;
};

export type TrainingRecord = {
    completed_at?: string;
    training_kind?: TrainingKind;
};

export type PersonTrainingRecords = Array<TrainingRecord>;

export type Person = {
    user: User;
    roles: Array<string>;
    agreements: ProfileAgreements;
    training_record: PersonTrainingRecords;
};

export type PersonUpdate = {
    training_kind?: TrainingKind;
    /**
     * Time in RFC3339 format at which the the certificate was issued
     */
    training_date?: string;
};

export type People = Array<Person>;

export type GetAuthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth';
};

export type GetAuthErrors = {
    /**
     * Unauthenticated
     */
    401: unknown;
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type GetAuthResponses = {
    200: Auth;
};

export type GetAuthResponse = GetAuthResponses[keyof GetAuthResponses];

export type GetProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/profile';
};

export type GetProfileErrors = {
    /**
     * Unexpected error
     */
    default: unknown;
};

export type GetProfileResponses = {
    200: ProfileResponse;
};

export type GetProfileResponse = GetProfileResponses[keyof GetProfileResponses];

export type PostProfileData = {
    body: ProfileUpdate;
    path?: never;
    query?: never;
    url: '/profile';
};

export type PostProfileErrors = {
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type PostProfileResponses = {
    /**
     * Successfully updated profile
     */
    200: ProfileResponse;
};

export type PostProfileResponse = PostProfileResponses[keyof PostProfileResponses];

export type GetProfileAgreementsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/profile/agreements';
};

export type GetProfileAgreementsErrors = {
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type GetProfileAgreementsResponses = {
    200: ProfileAgreements;
};

export type GetProfileAgreementsResponse = GetProfileAgreementsResponses[keyof GetProfileAgreementsResponses];

export type PostProfileAgreementsData = {
    body: AgreementConfirmation;
    path?: never;
    query?: never;
    url: '/profile/agreements';
};

export type PostProfileAgreementsErrors = {
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type PostProfileAgreementsResponses = {
    200: ProfileAgreements;
};

export type PostProfileAgreementsResponse = PostProfileAgreementsResponses[keyof PostProfileAgreementsResponses];

export type PostProfileTrainingData = {
    body: ProfileTrainingUpdate;
    path?: never;
    query?: never;
    url: '/profile/training';
};

export type PostProfileTrainingErrors = {
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type PostProfileTrainingResponses = {
    /**
     * Accepted
     */
    200: ProfileTrainingResponse;
};

export type PostProfileTrainingResponse = PostProfileTrainingResponses[keyof PostProfileTrainingResponses];

export type GetAgreementsApprovedResearcherData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/agreements/approved-researcher';
};

export type GetAgreementsApprovedResearcherErrors = {
    /**
     * Not acceptable
     */
    406: unknown;
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type GetAgreementsApprovedResearcherResponses = {
    200: Agreement;
};

export type GetAgreementsApprovedResearcherResponse = GetAgreementsApprovedResearcherResponses[keyof GetAgreementsApprovedResearcherResponses];

export type GetPeopleData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/people';
};

export type GetPeopleErrors = {
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type GetPeopleResponses = {
    200: People;
};

export type GetPeopleResponse = GetPeopleResponses[keyof GetPeopleResponses];

export type PostPeopleUpdateData = {
    body: PersonUpdate;
    path?: never;
    query: {
        id: string;
    };
    url: '/people/update';
};

export type PostPeopleUpdateErrors = {
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not found
     */
    404: unknown;
    /**
     * Internal server error
     */
    500: unknown;
    /**
     * Unexpected error
     */
    default: unknown;
};

export type PostPeopleUpdateResponses = {
    /**
     * Successfully updated person
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://${string}/api/v0` | (string & {});
};